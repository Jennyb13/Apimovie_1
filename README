
PROYECTO CONSULTA DE API

MovieBug - Sitio de Pel칤culas 游꿟


MovieBug es un sitio web que te permite explorar y descubrir pel칤culas populares de una manera f치cil y din치mica. Utiliza la API de The Movie Database (TMDb) para cargar datos en tiempo real sobre las pel칤culas m치s populares.

QUE PODEMOS HACER?
 Al acceder despliega las 20 Pel칤culas mas Populares de la semana, ademas de una amplia selecci칩n de pel칤culas populares.
Mediante una Paginaci칩n Din치mica, permite cargar m치s pel칤culas de forma din치mica con botones de paginaci칩n.
Su Barra de Navegaci칩n es  Responsiva y adaptable a diferentes tama침os de pantalla autom치ticamente.

TECNOLOGIAS UTILIZADAS
 HTML
 CSS (con Bootstrap)
 JavaScript

Estructura de Carpetas
html: Contiene el index del proyecto con la estructura de base
css: Contiene el archivo de estilos CSS y otras hojas de estilo.
img: Almacena las im치genes utilizadas en el proyecto.
JS: Contiene el archivo JavaScript que maneja la carga din치mica de pel칤culas.

FUNCIONAMIENTO
 Barra de Navegaci칩n: Permite navegar entre las secciones del sitio.
 Exploraci칩n de Pel칤culas: Muestra carteles de pel칤culas con t칤tulos.
 Paginaci칩n: Permite cargar m치s pel칤culas con botones de "Anterior" y "Siguiente".
Barra Lateral: Proporciona una alternativa de navegaci칩n en dispositivos m칩viles.

Uso del JavaScript
El archivo `apimovie.js` utiliza la API de The Movie Database para obtener datos din치micamente. El c칩digo maneja eventos de los botones de paginaci칩n y carga las pel칤culas correspondientes.

```javascript
MANEJO DIN츼MICO DE LA API


const cargarPeliculas = async () => {
    
    try {
        Realiza la petici칩n a la API de TMDb
        const respuesta = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=32c63ed5142a6572d1bdcaaecb61d6c1&language=es-ES&page=${pagina}`);

    Verifica el tipo de respuesta obtenida
        if (respuesta.status === 200) {
    Convierte la respuesta a formato JSON
            const datos = await respuesta.json();

            let peliculas = '';
            // Itera sobre los resultados y construye la estructura HTML din치mica
            datos.results.forEach(pelicula => {
                peliculas += `
                    <div class="pelicula">
                        <img class="poster" src="https://image.tmdb.org/t/p/w500/${pelicula.poster_path}">
                        <h3 class="titulo">${pelicula.title}</h3>
                    </div>
                `;
            });

    Actualiza el contenido del contenedor en la interfaz de usuario
            document.getElementById('contenedor').innerHTML = peliculas;
            
        } else if (respuesta.status === 401) {
            console.log('Error de clave');
        } else if (respuesta.status === 404) {
            console.log('La pel칤cula no existe');
        } else {
            console.log('Error no definido');
        }

    } catch (error) {    
        console.log(error);
    }   
}

Llama a la funci칩n para cargar pel칤culas al cargar la p치gina
cargarPeliculas();

